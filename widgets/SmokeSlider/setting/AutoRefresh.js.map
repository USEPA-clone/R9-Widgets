{"version":3,"sources":["../../../../widgets/SmokeSlider/setting/AutoRefresh.js"],"names":["define","declare","lang","BaseWidgetSetting","_WidgetsInTemplateMixin","on","template","esriTimeInfo","CheckBox","Select","clazz","templateString","postCreate","_unitsOptions","window","jimuNls","timeUnit","days","UNIT_DAYS","hours","UNIT_HOURS","minutes","UNIT_MINUTES","seconds","UNIT_SECONDS","autoRefresh","label","nls","checked","autoRefreshCheckBox","startup","own","hitch","val","_enableInputs","_disableInputs","intervalUnits","options","inherited","arguments","setConfig","config","setValue","isAutoRefresh","intervalNumber","interval","unit","isValid","set","getConfig","testConfig","getValue"],"mappings":"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","file":"AutoRefresh.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\n// Copyright Â© Esri. All Rights Reserved.\n//\n// Licensed under the Apache License Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n///////////////////////////////////////////////////////////////////////////\n\ndefine(['dojo/_base/declare',\n  'dojo/_base/lang',\n  \"jimu/BaseWidgetSetting\",\n  \"dijit/_WidgetsInTemplateMixin\",\n  'dojo/on',\n  \"dojo/text!./AutoRefresh.html\",\n  \"esri/layers/TimeInfo\",\n  \"jimu/dijit/CheckBox\",\n  \"dijit/form/Select\",\n  \"dijit/form/ValidationTextBox\"\n],\n  function (declare, lang, BaseWidgetSetting, _WidgetsInTemplateMixin, on, template,\n    esriTimeInfo, CheckBox, Select) {\n    var clazz = declare([BaseWidgetSetting, _WidgetsInTemplateMixin], {\n      templateString: template,\n      /*\n        configFromat = {\n          isAutoRefresh: false,// ture/false\n          interval:0,//number\n          unit:\"\"\n        }\n      */\n      postCreate: function () {\n        this._unitsOptions = [{\n          \"label\": window.jimuNls.timeUnit.days,\n          \"value\": esriTimeInfo.UNIT_DAYS\n        }, {\n          \"label\": window.jimuNls.timeUnit.hours,\n          \"value\": esriTimeInfo.UNIT_HOURS\n        }, {\n          \"label\": window.jimuNls.timeUnit.minutes,\n          \"value\": esriTimeInfo.UNIT_MINUTES\n        }, {\n          \"label\": window.jimuNls.timeUnit.seconds,\n          \"value\": esriTimeInfo.UNIT_SECONDS\n        }];\n\n        this.autoRefresh = new CheckBox({\n          label: this.nls.autoRefresh,\n          checked: false\n        }, this.autoRefreshCheckBox);\n        this.autoRefresh.startup();\n        this.own(on(this.autoRefresh, \"change\", lang.hitch(this, function (val) {\n          if (val) {\n            this._enableInputs();\n          } else {\n            this._disableInputs();\n          }\n        })));\n\n        this.intervalUnits = new Select({\n          options: this._unitsOptions,\n          \"disabled\": true,\n          \"class\": \"interval-units\"\n        }, this.intervalUnits);\n\n        this._disableInputs();\n\n        this.inherited(arguments);\n      },\n\n      setConfig: function (config) {\n        if (!config) {\n          return;\n        }\n\n        this.autoRefresh.setValue(config.isAutoRefresh);\n        this.intervalNumber.setValue(config.interval);\n        this.intervalUnits.setValue(config.unit);\n      },\n\n      isValid: function () {\n\n      },\n\n      _disableInputs: function () {\n        this.intervalNumber.set(\"disabled\", true);\n        this.intervalUnits.set(\"disabled\", true);\n      },\n      _enableInputs: function () {\n        this.intervalNumber.set(\"disabled\", false);\n        this.intervalUnits.set(\"disabled\", false);\n      },\n\n      getConfig: function () {\n        var testConfig = {\n          isAutoRefresh: this.autoRefresh.getValue(),// ture/false\n          interval: this.intervalNumber.getValue(),//number\n          unit: this.intervalUnits.getValue()\n        };\n        return testConfig;\n      }\n    });\n    return clazz;\n  });"]}