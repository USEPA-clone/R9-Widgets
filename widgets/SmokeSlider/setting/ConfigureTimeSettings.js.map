{"version":3,"sources":["../../../../widgets/SmokeSlider/setting/ConfigureTimeSettings.js"],"names":["define","Evented","declare","lang","_WidgetBase","_TemplatedMixin","_WidgetsInTemplateMixin","on","template","LayersConfig","TimeConfig","clazz","templateString","startup","rawConfig","config","layersConfig","nls","map","parent","layersConfigContainer","own","hitch","res","_config","startTime","timeConfig","time","timeExtent","endTime","updateConfigByLyaers","once","timeConfigContainer","customTimeConfig","setConfig","noLayer","emit","isNoLayer","customLayersConfig","inherited","arguments","getLayersTimeExtent","getFullTimeExtent","getConfig","settingConfig","subConfig","mixin","Date","getTime","isValid"],"mappings":"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","file":"ConfigureTimeSettings.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\n// Copyright Â© Esri. All Rights Reserved.\n//\n// Licensed under the Apache License Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n///////////////////////////////////////////////////////////////////////////\n\ndefine(['dojo/Evented',\n  'dojo/_base/declare',\n  'dojo/_base/lang',\n  'dijit/_WidgetBase',\n  'dijit/_TemplatedMixin',\n  \"dijit/_WidgetsInTemplateMixin\",\n  'dojo/on',\n  \"dojo/text!./ConfigureTimeSettings.html\",\n  './LayersConfig',\n  './TimeConfig',\n  \"jimu/dijit/CheckBox\",\n  \"dijit/form/Select\",\n  \"dijit/form/ValidationTextBox\"\n],\n  function (Evented, declare, lang,\n    _WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin,\n    on, template, LayersConfig, TimeConfig) {\n    var clazz = declare([_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin, Evented], {\n      templateString: template,\n      /*\n        timeConfigFromat = {\n          startTime:{\n            timeConfig: TimeCalendar.config\n          },\n          endTime:{\n            timeConfig: TimeCalendar.config\n          },\n          interval:{\n            number: null //number\n            units:\"\"//esriTimeInfo.X\n          }\n          displayAllData: false//t / f\n        }\n      */\n      // postCreate: function () {\n      //   this.inherited(arguments);\n      // },\n\n      startup: function () {\n        var rawConfig = this.config;\n        this.layersConfig = new LayersConfig({\n          nls: this.nls,\n          map: this.map,\n          config: rawConfig,\n          parent: this\n        }, this.layersConfigContainer);\n        //initTimeExtent\n        this.own(on(this.layersConfig, 'change', lang.hitch(this, function (res) {\n          if (null === res) {\n            return;\n          }\n          var _config = {\n            startTime: {\n              timeConfig: {\n                time: res.timeExtent.startTime\n              }\n            },\n            endTime: {\n              timeConfig: {\n                time: res.timeExtent.endTime\n              }\n            }\n          };\n\n          this.timeConfig.updateConfigByLyaers(_config);\n        })));\n\n        //2\n        this.own(on.once(this.layersConfig, 'initTimeExtent', lang.hitch(this, function (res) {\n          this.timeConfig = new TimeConfig({\n            nls: this.nls,\n            map: this.map,\n            config: rawConfig,\n            parent: this\n          }, this.timeConfigContainer);\n          this.timeConfig.startup();\n\n          if (rawConfig.customTimeConfig) {\n            this.timeConfig.setConfig(rawConfig.customTimeConfig);\n          }\n\n          var noLayer = false;\n          if (null === res) {\n            noLayer = true;//no time layers\n          }\n          this.emit('initedLayers', { isNoLayer: noLayer });\n        })));\n\n        this.layersConfig.startup();\n        if (rawConfig.customLayersConfig) {\n          this.layersConfig.setConfig(rawConfig.customLayersConfig);\n        }\n\n        this.inherited(arguments);\n      },\n      // getLayersTimeExtent: function(){\n      //   return this.layersConfig.getFullTimeExtent();\n      // },      // createAndSetLayersConfig: function (config) {\n      //   //return def;\n      // },\n      getLayersTimeExtent: function () {\n        return this.layersConfig.getFullTimeExtent();\n      },\n      setConfig: function (config) {\n        if (config.customTimeConfig) {\n          this.timeConfig.setConfig(config.customTimeConfig);\n        }\n        if (config.customLayersConfig) {\n          this.layersConfig.setConfig(config.customLayersConfig);\n        }\n      },\n      getConfig: function (settingConfig) {\n        settingConfig.customLayersConfig = null;\n        settingConfig.customTimeConfig = null;\n\n        var subConfig = {};\n        subConfig.customLayersConfig = this.layersConfig.getConfig();\n        subConfig.customTimeConfig = this.timeConfig.getConfig();\n\n        settingConfig = lang.mixin(settingConfig, subConfig);\n\n        if (settingConfig.customTimeConfig.startTime.timeConfig.time) {\n          settingConfig.customTimeConfig.startTime.timeConfig.time =\n            new Date(settingConfig.customTimeConfig.startTime.timeConfig.time).getTime();\n        }\n        if (settingConfig.customTimeConfig.endTime.timeConfig.time) {\n          settingConfig.customTimeConfig.endTime.timeConfig.time =\n            new Date(settingConfig.customTimeConfig.endTime.timeConfig.time).getTime();\n        }\n\n        return settingConfig;\n      },\n      isValid: function () {\n        if (this.timeConfig.isValid() && this.layersConfig.isValid()) {\n          return true;\n        }\n\n        return false;\n      }\n    });\n    return clazz;\n  });"]}