{"version":3,"sources":["../../../widgets/SmokeSlider/LayerProcesser.js"],"names":["define","declare","lang","array","Evented","_WidgetBase","utils","clazz","nls","map","layerInfosObj","setLayerInfosObj","setTimeSlider","timeSlider","processTimeDisableLayer","i","len","layer","layerId","layerIds","length","getLayer","_processTimeUpdate","graphicsLayerIds","isEnabled","isLayerEnabledTime","setUseMapTime","processerDisableLayers","props","disabledLayers","hitch","isTimeEnabled","layerInfo","getLayerInfoById","layerObject","hasVisibleTemporalLayer","_isTimeTemporalLayer","isMustVisible","condition","timeInfo","useMapTime","visible","layerType","declaredClass","internalLayers","getLayers","some","kLayer","timeExtent","_getVisibleTemporalLayerNames","ids","push","id","names","info","title","_onLayerInfosIsShowInMapChanged","changedLayerInfos","timeTemporalLayerChanged","_layer","parentLayerInfo","layerProcesser","_onTimeTemportalLayerChanged","_onLayerInfosChanged","changedType","layerInfoSelf","visibleTimeTemporalLayerChanged","that","state","updateLayerLabel","showTimeSlider","closeTimeSlider","hasLiveDataLayer","hasLiveData"],"mappings":"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","file":"LayerProcesser.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\n// Copyright Â© Esri. All Rights Reserved.\n//\n// Licensed under the Apache License Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n///////////////////////////////////////////////////////////////////////////\n\ndefine(['dojo/_base/declare',\n  'dojo/_base/lang',\n  'dojo/_base/array',\n  'dojo/Evented',\n  'dijit/_WidgetBase',\n  './utils'\n],\n  function (declare, lang, array, Evented, _WidgetBase, utils) {\n    var clazz = declare([_WidgetBase, Evented], {\n      nls: null,\n      map: null,\n      layerInfosObj: null,\n\n      setLayerInfosObj: function (layerInfosObj) {\n        this.layerInfosObj = layerInfosObj;\n      },\n      setTimeSlider: function (timeSlider) {\n        this.timeSlider = timeSlider;\n      },\n\n      //hack layer.useMapTime\n      //bacause most of layerData come form API, but mapViewer could set some config in json(eg:disable time)\n      //so we mix those in layerData\n      processTimeDisableLayer: function () {\n        var i = 0, len, layer, layerId;\n        for (i = 0, len = this.map.layerIds.length; i < len; i++) {\n          layerId = this.map.layerIds[i];\n          layer = this.map.getLayer(layerId);\n\n          this._processTimeUpdate(layer);\n        }\n\n        for (i = 0, len = this.map.graphicsLayerIds.length; i < len; i++) {\n          layerId = this.map.graphicsLayerIds[i];\n          layer = this.map.getLayer(layerId);\n\n          this._processTimeUpdate(layer);\n        }\n\n        //TODO config\n        //utils.setLayersUseMapTimebyConfig(this.layerInfosObj, this.config);\n      },\n      _processTimeUpdate: function (layer) {\n        // var _layerInfo = null;\n        // var timeAnimation = true;\n        // _layerInfo = this.layerInfosObj.getLayerInfoById(layer.id);\n        // //disable time in mapViewer, when timeAnimation=false\n        // timeAnimation = _layerInfo && _layerInfo.originOperLayer &&\n        //   (_layerInfo.originOperLayer.timeAnimation !== false);\n        // if (!timeAnimation && 'setUseMapTime' in layer) {\n        //   //layer.setUseMapTime(false);\n        // }\n        var isEnabled = utils.isLayerEnabledTime(layer, this.layerInfosObj);\n        if (layer.setUseMapTime) {\n          //restore enable/disable to webmap\n          if (true !== isEnabled) {\n            layer.setUseMapTime(false);\n          } else {\n            layer.setUseMapTime(true);\n          }\n        }\n      },\n\n      //TODO should be delete\n      processerDisableLayers: function (props) {\n        if (!props || !props.disabledLayers) {\n          return;\n        }\n\n        array.map(props.disabledLayers, lang.hitch(this, function (layer) {\n          if (true !== layer.isTimeEnabled) {\n            var layerInfo = this.layerInfosObj.getLayerInfoById(layer.layerId);\n            if (layerInfo && layerInfo.layerObject && layerInfo.layerObject.setUseMapTime) {\n              layerInfo.layerObject.setUseMapTime(false);\n            }\n          }\n        }));\n      },\n\n      hasVisibleTemporalLayer: function () {\n        var i = 0,\n          len, layer, layerId;\n        for (i = 0, len = this.map.layerIds.length; i < len; i++) {\n          layerId = this.map.layerIds[i];\n          layer = this.map.getLayer(layerId);\n\n          if (this._isTimeTemporalLayer(layer, true)) {//mustVisible\n            return true;\n          }\n        }\n\n        for (i = 0, len = this.map.graphicsLayerIds.length; i < len; i++) {\n          layerId = this.map.graphicsLayerIds[i];\n          layer = this.map.getLayer(layerId);\n\n          if (this._isTimeTemporalLayer(layer, true)) {//mustVisible\n            return true;\n          }\n        }\n\n        return false;\n      },\n      _isTimeTemporalLayer: function (layer, isMustVisible) {\n        if (!layer) {\n          return false;\n        }\n\n        //use useMapTime instead of timeAnimation to filter enable/disable\n        var condition = (layer && layer.timeInfo && layer.useMapTime);\n        //consider with visibility\n        if (true === isMustVisible) {\n          condition = (condition && layer.visible);\n        }\n\n        if (condition) {\n          var layerType = layer.declaredClass;\n          if (layerType === \"esri.layers.KMLLayer\") {\n            var internalLayers = layer.getLayers();\n            var some = array.some(internalLayers, function (kLayer) {\n              if (kLayer.timeInfo && kLayer.timeInfo.timeExtent) {\n                return true;\n              }\n              return false;\n            });\n            if (some) {\n              return true;\n            }\n          } else if (layer.timeInfo && layer.timeInfo.timeExtent) {\n            return true;\n          }\n        } else {\n          return false;\n        }\n      },\n\n      _getVisibleTemporalLayerNames: function () {\n        var i = 0,\n          len, layer, layerId;\n        var ids = [];\n        for (i = 0, len = this.map.layerIds.length; i < len; i++) {\n          layerId = this.map.layerIds[i];\n          layer = this.map.getLayer(layerId);\n\n          if (this._isTimeTemporalLayer(layer, true)) {\n            ids.push(layer.id);\n          }\n        }\n\n        for (i = 0, len = this.map.graphicsLayerIds.length; i < len; i++) {\n          layerId = this.map.graphicsLayerIds[i];\n          layer = this.map.getLayer(layerId);\n\n          if (this._isTimeTemporalLayer(layer, true)) {\n            ids.push(layer.id);\n          }\n        }\n\n        var names = array.map(ids, lang.hitch(this, function (id) {\n          var info = this.layerInfosObj.getLayerInfoById(id);\n          return info.title || \"\";\n        }));\n\n        return names;\n      },\n\n      //for layerInfo event changed\n      _onLayerInfosIsShowInMapChanged: function (changedLayerInfos) {\n        var timeTemporalLayerChanged = array.some(\n          changedLayerInfos,\n          lang.hitch(this, function (layerInfo) {\n            var _layer = null;\n            while (!_layer) {\n              _layer = this.map.getLayer(layerInfo.id);\n              layerInfo = layerInfo.parentLayerInfo;\n            }\n\n            return this.layerProcesser._isTimeTemporalLayer(_layer);\n          }));\n\n        if (timeTemporalLayerChanged) {\n          this.layerProcesser._onTimeTemportalLayerChanged(this);\n        }\n      },\n      _onLayerInfosChanged: function (layerInfo, changedType, layerInfoSelf) {\n        /* jshint unused:true */\n        if (changedType === 'added') {\n          var _layer = this.map.getLayer(layerInfoSelf.id);\n          var visibleTimeTemporalLayerChanged = this.layerProcesser._isTimeTemporalLayer(_layer, true);\n\n          if (visibleTimeTemporalLayerChanged) {\n            this.layerProcesser._onTimeTemportalLayerChanged(this);\n          }\n        } else if (changedType === 'removed') {\n          this.layerProcesser._onTimeTemportalLayerChanged(this);\n        }\n      },\n      _onTimeTemportalLayerChanged: function (that) {\n        if (that.state !== 'closed') {\n          if (that.layerProcesser.hasVisibleTemporalLayer()) {\n            if (that.timeSlider) {\n              that.updateLayerLabel();\n            } else {\n              that.showTimeSlider();\n            }\n          } else {\n            if (that.timeSlider) {\n              that.closeTimeSlider();\n            }\n          }\n        }\n      },\n\n      hasLiveDataLayer: function () {\n        var i = 0, len, layer, layerId;\n        for (i = 0, len = this.map.layerIds.length; i < len; i++) {\n          layerId = this.map.layerIds[i];\n          layer = this.map.getLayer(layerId);\n\n          if (utils.hasLiveData(layer)) {\n            return true;\n          }\n        }\n\n        for (i = 0, len = this.map.graphicsLayerIds.length; i < len; i++) {\n          layerId = this.map.graphicsLayerIds[i];\n          layer = this.map.getLayer(layerId);\n\n          if (utils.hasLiveData(layer)) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    });\n\n    return clazz;\n  });"]}