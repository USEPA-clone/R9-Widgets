on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:

name: check and deploy app

jobs:

  check:
    environment: NEW_ER_CLOUD
    runs-on: self-hosted
    outputs:
      continue: ${{ steps.check.outputs.continue }}
    steps:
      - name: check if changes to json file
        id: check
        run: |
          $info = Get-Content .\info.json -Raw | ConvertFrom-Json
          $now = Get-Date -UFormat %s
          $continue = $info.typeKeywords -contains "status: Draft" -and [float]$now * 1000 - $info.modified -lt 600000
          echo "continue=$continue" >> $env:GITHUB_ENV
        working-directory: ${{vars.EB_LOCATION}}/server/public/apps/12
  deploy_staging:
#    if: ${{ needs.check.outputs.continue == 'true' }}
    concurrency:
      group: deploy_eb_app
      cancel-in-progress: true
    runs-on: self-hosted
    environment: NEW_ER_CLOUD
    steps:
      - name: too many
        run: |
          echo "remove backup and latest folders if exists"
          $backup = "\\${{vars.WEB_HOST}}\R9Apps\staging\COP_backup"
          $latest = "\\${{vars.WEB_HOST}}\R9Apps\staging\COP_latest"
          $prod = "\\${{vars.WEB_HOST}}\R9Apps\staging\COP"
          if (Test-Path $backup) {
            Remove-Item -Recurse -Force $backup
          }
          if (Test-Path $latest) {
            Remove-Item -Recurse -Force $latest
          }
          
          echo "export app to zip and unpack into latest folder"
          node ${{ vars.EB_LOCATION }}\server\src\runZipApp.js 12 ${{ github.workspace }}\exp_builder_widgets_export.zip
          Expand-Archive -LiteralPath ${{ github.workspace }}\exp_builder_widgets_export.zip -DestinationPath \\${{vars.WEB_HOST}}\R9Apps\staging\COP_latest
          
          Rename-Item $prod $backup
          Rename-Item $latest $prod
          
          echo "update client id"
          $cdnSubFolder = Get-ChildItem -Path $prod\cdn -Name
          Copy-Item -Path $prod\cdn\*\config.json -Destination ${{ github.workspace }}
          $config = Get-Content ${{ github.workspace }}\\config.json -Raw | ConvertFrom-Json
          $config.attributes.clientId = ${{vars.COP_CLIENT_ID}}
          $config | ConvertTo-Json | Out-File "${{ github.workspace }}\config.json"
          Copy-Item -Path ${{ github.workspace }}\config.json -Destination $prod\cdn\$cdnSubFolder
    
    
