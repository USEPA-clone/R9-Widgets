on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:

name: check and deploy app
jobs:

  check:
    environment: NEW_ER_CLOUD
    runs-on: self-hosted
    outputs:
      continue: ${{ steps.check.outputs.continue }}
    steps:
      - name: check if changes to json file
        id: check
        run: |
          $info = Get-Content .\info.json -Raw | ConvertFrom-Json
          $now = Get-Date -UFormat %s
          $continue = $info.typeKeywords -contains "status: Draft" -and [float]$now * 1000 - $info.modified -lt 600000
          echo "continue=$continue" >> $env:GITHUB_ENV
          echo $continue
        working-directory: ${{vars.EB_LOCATION}}/server/public/apps/12

  deploy_staging:
    needs: check
    if: ${{ needs.check.outputs.continue == 'true' }}
    runs-on: self-hosted
    environment: NEW_ER_CLOUD
    env:
      BACKUP: \\${{vars.WEB_HOST}}\R9apps\staging\COP_backup
      LATEST: \\${{vars.WEB_HOST}}\R9apps\staging\COP_LATEST
      PROD: \\${{vars.WEB_HOST}}\R9apps\staging\cop
    steps:
      - name: remove backup and latest folders if exists
        run: |
          if (Test-Path $env:BACKUP) {
            Remove-Item -Recurse -Force $env:BACKUP
          }
          if (Test-Path $env:LATEST) {
            Remove-Item -Recurse -Force $env:LATEST
          }
          if (Test-Path ${{ github.workspace }}\exp_builder_widgets_export.zip) {
            Remove-Item -Force ${{ github.workspace }}\exp_builder_widgets_export.zip
          }
      - name: export app to zip and unpack into latest folder
        run: |
          node ${{ vars.EB_LOCATION }}\server\src\runZipApp.js 12 ${{ github.workspace }}\exp_builder_widgets_export.zip
          Expand-Archive -LiteralPath ${{ github.workspace }}\exp_builder_widgets_export.zip -DestinationPath $env:LATEST
      - name: update client id
        run: |
          $cdnSubFolder = Get-ChildItem -Path $env:LATEST\cdn -Name
          Copy-Item -Path $env:LATEST\cdn\*\config.json -Destination ${{ github.workspace }}
          $config = (Get-Content ${{ github.workspace }}\config.json -Encoding utf8 | Out-String | ConvertFrom-JsonNewtonSoft)
          $config.attributes.clientId = "${{vars.COP_CLIENT_ID}}"
          $config | ConvertTo-JsonNewtonsoft | Out-File -Encoding utf8 "${{ github.workspace }}\config.json"
          Copy-Item -Path ${{ github.workspace }}\config.json -Destination $env:LATEST\cdn\$cdnSubFolder
      - name: move prod to backup and latest to prod
        run: |
          Rename-Item $env:PROD $env:BACKUP
          Rename-Item $env:LATEST $env:PROD

